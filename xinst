#!/bin/sh

# version defined when installing by makefile
version=dummy

__version () {
    printf '%s' "$0 version $version"
}

# also defined when installing
in=xi
up=xu
rem=xr

usage="$0 $version is a multicall script (think busybox) and
behaves differently according to how it's called.

Usage: xinst [OPTION]
   or: xinst <function> [PKGS]
   or: <function> [PKGS]

If no PKGS are given, open fzf menu.

FUNCTIONS:
  $in: install PKGS
  $up: update all PKGS
  $rem: remove PKGS

OPTIONS:
  -v --version        Print version.
  -h --help           Print this text.
  -s --supported      Print list of supported package managers.
"

__usage () {
    printf '%s' "$usage"
}

supported="Currently supported package managers:
+------+------------------+--------------------+
| tool | used by          | extra requirements |
+------+------------------+--------------------+
| xbps | Void Linux       | xpkg               |
| apt  | Debian GNU/Linux |                    |
+------+------------------+--------------------+
"

__supported () {
    printf '%s' "$supported"
}

if [ ! "$(command -v fzf)" ]; then
    printf 'fzf not found!'
    exit 1
fi

# requires xbps and xtools pkgs
if [ "$(command -v xbps-install)" ] && [ "$(command -v xpkg)" ]; then
    INSTALL='xbps-install -Suy'
    REMOVE='xbps-remove -Roy'
    UPDATE="xbps-install -Suy"
    QUERY='xbps-query -R'
    GET_ALL='xpkg -a'
    GET_INSTALLED="xpkg -m"
fi

# requires apt
if [ "$(command -v apt-get)"  ]; then
    INSTALL='apt-get install -y'
    REMOVE='apt-get remove -y'
    UPDATE='apt-get update'
    UPGRADE='apt-get upgrade -y'
    QUERY='apt-cache show'
    GET_ALL='apt-cache pkgnames'
    GET_INSTALLED='apt-mark showmanual'
fi

__install () {
    if [ "$@"  ]; then
        sudo $INSTALL "$@"
        return
    fi
    $GET_ALL |
        fzf -m --preview "$QUERY {1}" --preview-window=right:66%:wrap |
        xargs -ro sudo $INSTALL
}

__update () {
    sudo $UPDATE
    if [ "$UPGRADE" ]; then
        sudo $UPGRADE
    fi
}

__remove () {
    if [ "$@"  ]; then
        sudo "$REMOVE" "$@"
        return
    fi
    $GET_INSTALLED |
        fzf -m --preview "$QUERY {1}" --preview-window=right:66%:wrap |
        xargs -ro sudo $REMOVE
}

# execute function
case "$0" in
    *"$in") __install "$@"
        ;;
    *"$up") __update "$@"
        ;;
    *"$rem") __remove "$@"
        ;;
    *xinst)
        case "$1" in
        "$in") shift
            __install "$@"
            ;;
        "$up") shift
            __update "$@"
            ;;
        "$rem") shift
            __remove "$@"
            ;;
        *) __usage
            exit 0
            ;;
        esac
        ;;
    *)  __usage
        exit 0
        ;;
esac

# parse options
case "$1" in
    -h|--help)
        __usage
        exit 0
        ;;
    -v|--version)
        __version
        exit 0
        ;;
    -s|--supported)
        __supported
        exit 0
        ;;
    '') ;;
    *)  echo "Unknown option '$1'"
        __usage
        exit 0
        ;;
esac

# unset defined functions
unset __install __update __remove __usage __supported __version
